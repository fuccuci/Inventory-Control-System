<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>