<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>