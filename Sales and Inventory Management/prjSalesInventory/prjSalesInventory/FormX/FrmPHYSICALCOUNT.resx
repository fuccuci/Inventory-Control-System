<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Av4F31qvbzyxwHoAAAAASUVORK5CYII=
</value>
  </data>
</root>